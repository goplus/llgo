[
  {
    "mangle": "lua_absindex",
    "c++": "lua_absindex(lua_State *, int)",
    "go": "Absindex"
  },
  {
    "mangle": "lua_arith",
    "c++": "lua_arith(lua_State *, int)",
    "go": "Arith"
  },
  {
    "mangle": "lua_atpanic",
    "c++": "lua_atpanic(lua_State *, lua_CFunction)",
    "go": "Atpanic"
  },
  {
    "mangle": "lua_callk",
    "c++": "lua_callk(lua_State *, int, int, lua_KContext, lua_KFunction)",
    "go": "Callk"
  },
  {
    "mangle": "lua_checkstack",
    "c++": "lua_checkstack(lua_State *, int)",
    "go": "Checkstack"
  },
  {
    "mangle": "lua_close",
    "c++": "lua_close(lua_State *)",
    "go": "Close"
  },
  {
    "mangle": "lua_closeslot",
    "c++": "lua_closeslot(lua_State *, int)",
    "go": "Closeslot"
  },
  {
    "mangle": "lua_closethread",
    "c++": "lua_closethread(lua_State *, lua_State *)",
    "go": "Closethread"
  },
  {
    "mangle": "lua_compare",
    "c++": "lua_compare(lua_State *, int, int, int)",
    "go": "Compare"
  },
  {
    "mangle": "lua_concat",
    "c++": "lua_concat(lua_State *, int)",
    "go": "Concat"
  },
  {
    "mangle": "lua_copy",
    "c++": "lua_copy(lua_State *, int, int)",
    "go": "Copy"
  },
  {
    "mangle": "lua_createtable",
    "c++": "lua_createtable(lua_State *, int, int)",
    "go": "Createtable"
  },
  {
    "mangle": "lua_dump",
    "c++": "lua_dump(lua_State *, lua_Writer, void *, int)",
    "go": "Dump"
  },
  {
    "mangle": "lua_error",
    "c++": "lua_error(lua_State *)",
    "go": "Error"
  },
  {
    "mangle": "lua_gc",
    "c++": "lua_gc(lua_State *, int, ...)",
    "go": "Gc"
  },
  {
    "mangle": "lua_getallocf",
    "c++": "lua_getallocf(lua_State *, void **)",
    "go": "Getallocf"
  },
  {
    "mangle": "lua_getfield",
    "c++": "lua_getfield(lua_State *, int, const char *)",
    "go": "Getfield"
  },
  {
    "mangle": "lua_getglobal",
    "c++": "lua_getglobal(lua_State *, const char *)",
    "go": "Getglobal"
  },
  {
    "mangle": "lua_gethook",
    "c++": "lua_gethook(lua_State *)",
    "go": "Gethook"
  },
  {
    "mangle": "lua_gethookcount",
    "c++": "lua_gethookcount(lua_State *)",
    "go": "Gethookcount"
  },
  {
    "mangle": "lua_gethookmask",
    "c++": "lua_gethookmask(lua_State *)",
    "go": "Gethookmask"
  },
  {
    "mangle": "lua_geti",
    "c++": "lua_geti(lua_State *, int, lua_Integer)",
    "go": "Geti"
  },
  {
    "mangle": "lua_getinfo",
    "c++": "lua_getinfo(lua_State *, const char *, lua_Debug *)",
    "go": "Getinfo"
  },
  {
    "mangle": "lua_getiuservalue",
    "c++": "lua_getiuservalue(lua_State *, int, int)",
    "go": "Getiuservalue"
  },
  {
    "mangle": "lua_getlocal",
    "c++": "lua_getlocal(lua_State *, const lua_Debug *, int)",
    "go": "Getlocal"
  },
  {
    "mangle": "lua_getmetatable",
    "c++": "lua_getmetatable(lua_State *, int)",
    "go": "Getmetatable"
  },
  {
    "mangle": "lua_getstack",
    "c++": "lua_getstack(lua_State *, int, lua_Debug *)",
    "go": "Getstack"
  },
  {
    "mangle": "lua_gettable",
    "c++": "lua_gettable(lua_State *, int)",
    "go": "Gettable"
  },
  {
    "mangle": "lua_gettop",
    "c++": "lua_gettop(lua_State *)",
    "go": "Gettop"
  },
  {
    "mangle": "lua_getupvalue",
    "c++": "lua_getupvalue(lua_State *, int, int)",
    "go": "Getupvalue"
  },
  {
    "mangle": "lua_iscfunction",
    "c++": "lua_iscfunction(lua_State *, int)",
    "go": "Iscfunction"
  },
  {
    "mangle": "lua_isinteger",
    "c++": "lua_isinteger(lua_State *, int)",
    "go": "Isinteger"
  },
  {
    "mangle": "lua_isnumber",
    "c++": "lua_isnumber(lua_State *, int)",
    "go": "Isnumber"
  },
  {
    "mangle": "lua_isstring",
    "c++": "lua_isstring(lua_State *, int)",
    "go": "Isstring"
  },
  {
    "mangle": "lua_isuserdata",
    "c++": "lua_isuserdata(lua_State *, int)",
    "go": "Isuserdata"
  },
  {
    "mangle": "lua_isyieldable",
    "c++": "lua_isyieldable(lua_State *)",
    "go": "Isyieldable"
  },
  {
    "mangle": "lua_len",
    "c++": "lua_len(lua_State *, int)",
    "go": "Len"
  },
  {
    "mangle": "lua_load",
    "c++": "lua_load(lua_State *, lua_Reader, void *, const char *, const char *)",
    "go": "Load"
  },
  {
    "mangle": "lua_newstate",
    "c++": "lua_newstate(lua_Alloc, void *)",
    "go": "Newstate"
  },
  {
    "mangle": "lua_newthread",
    "c++": "lua_newthread(lua_State *)",
    "go": "Newthread"
  },
  {
    "mangle": "lua_newuserdatauv",
    "c++": "lua_newuserdatauv(lua_State *, size_t, int)",
    "go": "Newuserdatauv"
  },
  {
    "mangle": "lua_next",
    "c++": "lua_next(lua_State *, int)",
    "go": "Next"
  },
  {
    "mangle": "lua_pcallk",
    "c++": "lua_pcallk(lua_State *, int, int, int, lua_KContext, lua_KFunction)",
    "go": "Pcallk"
  },
  {
    "mangle": "lua_pushboolean",
    "c++": "lua_pushboolean(lua_State *, int)",
    "go": "Pushboolean"
  },
  {
    "mangle": "lua_pushcclosure",
    "c++": "lua_pushcclosure(lua_State *, lua_CFunction, int)",
    "go": "Pushcclosure"
  },
  {
    "mangle": "lua_pushfstring",
    "c++": "lua_pushfstring(lua_State *, const char *, ...)",
    "go": "Pushfstring"
  },
  {
    "mangle": "lua_pushinteger",
    "c++": "lua_pushinteger(lua_State *, lua_Integer)",
    "go": "Pushinteger"
  },
  {
    "mangle": "lua_pushlightuserdata",
    "c++": "lua_pushlightuserdata(lua_State *, void *)",
    "go": "Pushlightuserdata"
  },
  {
    "mangle": "lua_pushlstring",
    "c++": "lua_pushlstring(lua_State *, const char *, size_t)",
    "go": "Pushlstring"
  },
  {
    "mangle": "lua_pushnil",
    "c++": "lua_pushnil(lua_State *)",
    "go": "Pushnil"
  },
  {
    "mangle": "lua_pushnumber",
    "c++": "lua_pushnumber(lua_State *, lua_Number)",
    "go": "Pushnumber"
  },
  {
    "mangle": "lua_pushstring",
    "c++": "lua_pushstring(lua_State *, const char *)",
    "go": "Pushstring"
  },
  {
    "mangle": "lua_pushthread",
    "c++": "lua_pushthread(lua_State *)",
    "go": "Pushthread"
  },
  {
    "mangle": "lua_pushvalue",
    "c++": "lua_pushvalue(lua_State *, int)",
    "go": "Pushvalue"
  },
  {
    "mangle": "lua_pushvfstring",
    "c++": "lua_pushvfstring(lua_State *, const char *, int)",
    "go": "Pushvfstring"
  },
  {
    "mangle": "lua_rawequal",
    "c++": "lua_rawequal(lua_State *, int, int)",
    "go": "Rawequal"
  },
  {
    "mangle": "lua_rawget",
    "c++": "lua_rawget(lua_State *, int)",
    "go": "Rawget"
  },
  {
    "mangle": "lua_rawgeti",
    "c++": "lua_rawgeti(lua_State *, int, lua_Integer)",
    "go": "Rawgeti"
  },
  {
    "mangle": "lua_rawgetp",
    "c++": "lua_rawgetp(lua_State *, int, const void *)",
    "go": "Rawgetp"
  },
  {
    "mangle": "lua_rawlen",
    "c++": "lua_rawlen(lua_State *, int)",
    "go": "Rawlen"
  },
  {
    "mangle": "lua_rawset",
    "c++": "lua_rawset(lua_State *, int)",
    "go": "Rawset"
  },
  {
    "mangle": "lua_rawseti",
    "c++": "lua_rawseti(lua_State *, int, lua_Integer)",
    "go": "Rawseti"
  },
  {
    "mangle": "lua_rawsetp",
    "c++": "lua_rawsetp(lua_State *, int, const void *)",
    "go": "Rawsetp"
  },
  {
    "mangle": "lua_resetthread",
    "c++": "lua_resetthread(lua_State *)",
    "go": "Resetthread"
  },
  {
    "mangle": "lua_resume",
    "c++": "lua_resume(lua_State *, lua_State *, int, int *)",
    "go": "Resume"
  },
  {
    "mangle": "lua_rotate",
    "c++": "lua_rotate(lua_State *, int, int)",
    "go": "Rotate"
  },
  {
    "mangle": "lua_setallocf",
    "c++": "lua_setallocf(lua_State *, lua_Alloc, void *)",
    "go": "Setallocf"
  },
  {
    "mangle": "lua_setcstacklimit",
    "c++": "lua_setcstacklimit(lua_State *, unsigned int)",
    "go": "Setcstacklimit"
  },
  {
    "mangle": "lua_setfield",
    "c++": "lua_setfield(lua_State *, int, const char *)",
    "go": "Setfield"
  },
  {
    "mangle": "lua_setglobal",
    "c++": "lua_setglobal(lua_State *, const char *)",
    "go": "Setglobal"
  },
  {
    "mangle": "lua_sethook",
    "c++": "lua_sethook(lua_State *, lua_Hook, int, int)",
    "go": "Sethook"
  },
  {
    "mangle": "lua_seti",
    "c++": "lua_seti(lua_State *, int, lua_Integer)",
    "go": "Seti"
  },
  {
    "mangle": "lua_setiuservalue",
    "c++": "lua_setiuservalue(lua_State *, int, int)",
    "go": "Setiuservalue"
  },
  {
    "mangle": "lua_setlocal",
    "c++": "lua_setlocal(lua_State *, const lua_Debug *, int)",
    "go": "Setlocal"
  },
  {
    "mangle": "lua_setmetatable",
    "c++": "lua_setmetatable(lua_State *, int)",
    "go": "Setmetatable"
  },
  {
    "mangle": "lua_settable",
    "c++": "lua_settable(lua_State *, int)",
    "go": "Settable"
  },
  {
    "mangle": "lua_settop",
    "c++": "lua_settop(lua_State *, int)",
    "go": "Settop"
  },
  {
    "mangle": "lua_setupvalue",
    "c++": "lua_setupvalue(lua_State *, int, int)",
    "go": "Setupvalue"
  },
  {
    "mangle": "lua_setwarnf",
    "c++": "lua_setwarnf(lua_State *, lua_WarnFunction, void *)",
    "go": "Setwarnf"
  },
  {
    "mangle": "lua_status",
    "c++": "lua_status(lua_State *)",
    "go": "Status"
  },
  {
    "mangle": "lua_stringtonumber",
    "c++": "lua_stringtonumber(lua_State *, const char *)",
    "go": "Stringtonumber"
  },
  {
    "mangle": "lua_toboolean",
    "c++": "lua_toboolean(lua_State *, int)",
    "go": "Toboolean"
  },
  {
    "mangle": "lua_tocfunction",
    "c++": "lua_tocfunction(lua_State *, int)",
    "go": "Tocfunction"
  },
  {
    "mangle": "lua_toclose",
    "c++": "lua_toclose(lua_State *, int)",
    "go": "Toclose"
  },
  {
    "mangle": "lua_tointegerx",
    "c++": "lua_tointegerx(lua_State *, int, int *)",
    "go": "Tointegerx"
  },
  {
    "mangle": "lua_tolstring",
    "c++": "lua_tolstring(lua_State *, int, size_t *)",
    "go": "Tolstring"
  },
  {
    "mangle": "lua_tonumberx",
    "c++": "lua_tonumberx(lua_State *, int, int *)",
    "go": "Tonumberx"
  },
  {
    "mangle": "lua_topointer",
    "c++": "lua_topointer(lua_State *, int)",
    "go": "Topointer"
  },
  {
    "mangle": "lua_tothread",
    "c++": "lua_tothread(lua_State *, int)",
    "go": "Tothread"
  },
  {
    "mangle": "lua_touserdata",
    "c++": "lua_touserdata(lua_State *, int)",
    "go": "Touserdata"
  },
  {
    "mangle": "lua_type",
    "c++": "lua_type(lua_State *, int)",
    "go": "Type"
  },
  {
    "mangle": "lua_typename",
    "c++": "lua_typename(lua_State *, int)",
    "go": "Typename"
  },
  {
    "mangle": "lua_upvalueid",
    "c++": "lua_upvalueid(lua_State *, int, int)",
    "go": "Upvalueid"
  },
  {
    "mangle": "lua_upvaluejoin",
    "c++": "lua_upvaluejoin(lua_State *, int, int, int, int)",
    "go": "Upvaluejoin"
  },
  {
    "mangle": "lua_version",
    "c++": "lua_version(lua_State *)",
    "go": "Version"
  },
  {
    "mangle": "lua_warning",
    "c++": "lua_warning(lua_State *, const char *, int)",
    "go": "Warning"
  },
  {
    "mangle": "lua_xmove",
    "c++": "lua_xmove(lua_State *, lua_State *, int)",
    "go": "Xmove"
  },
  {
    "mangle": "lua_yieldk",
    "c++": "lua_yieldk(lua_State *, int, lua_KContext, lua_KFunction)",
    "go": "Yieldk"
  }
]
